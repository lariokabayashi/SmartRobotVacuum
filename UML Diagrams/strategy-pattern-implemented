@startuml
title Simple MVC + Observer Pattern – Cleaning System (with Strategy)

/'──────────────────────────────────────────────────────────
  GLOBAL STYLE
──────────────────────────────────────────────────────────'/
skinparam linetype ortho
skinparam classAttributeIconSize 0
hide empty members


/'──────────────────────────────────────────────────────────
  OBSERVER CONTRACTS  (shared, unchanged)
──────────────────────────────────────────────────────────'/
interface Subject {
  +registerObserver(o : Observer)
  +removeObserver(o : Observer)
  +notifyObservers()
}

interface Observer {
  +update(arg)
}


/'──────────────────────────────────────────────────────────
  MODEL (Entity – Data)
──────────────────────────────────────────────────────────'/
class CleaningSession <<model>> {
  -currentAction : CleaningAction        ' now a strategy
  -progress      : float
  +getProgress() : float
  +setProgress(p : float) : void
}
CleaningSession ..|> Subject


class RoomPreferenceStorage <<model>> {
  -preferences : Map<String, CleaningPreference>
  +getPreference(roomId : String) : CleaningPreference
  +setPreference(roomId : String, pref : CleaningPreference) : void
}
RoomPreferenceStorage ..|> Subject

class SessionLog <<model>> {
  -entries : List<SessionEntry>
  +addEntry(e : SessionEntry) : void
  +getEntries() : List<SessionEntry>
}
SessionLog ..|> Subject

class BoundaryStorage <<model>> {
  -noGoZones : List<Polygon>
  +addZone(zone : Polygon) : void
  +removeZone(zone : Polygon) : void
  +getZones() : List<Polygon>
}
BoundaryStorage ..|> Subject

class MapHandler <<model>> {
  -floorMap : MapData
  +update(zones : List<Polygon>) : void
  +highlightArea(area : Polygon) : void
  +renderOverlay(zone : Polygon) : void
}
MapHandler ..|> Observer


/'──────────────────────────────────────────────────────────
  STRATEGY PATTERN (NEW SECTION)
──────────────────────────────────────────────────────────'/
interface CleaningAction <<strategy>> {
  +execute(session : CleaningSession) : void
}

class StandardCleaningAction <<strategy>> {
  +execute(session : CleaningSession) : void
}
StandardCleaningAction ..|> CleaningAction

class SpotCleaningAction <<strategy>> {
  +execute(session : CleaningSession) : void
}
SpotCleaningAction ..|> CleaningAction

class EdgeCleaningAction <<strategy>> {
  +execute(session : CleaningSession) : void
}
EdgeCleaningAction ..|> CleaningAction

' Context links
CleaningSession  "1" o-- "1"   CleaningAction : «current»
CleaningController "1" --> "1" CleaningAction : «selects»


/'──────────────────────────────────────────────────────────
  VIEW (Boundary – UI)
──────────────────────────────────────────────────────────'/
class PreferenceView <<view>> {
  +update(roomId : String, p : CleaningPreference) : void
  +display(all : Map<String,CleaningPreference>) : void
  +sendUserInput(room : String, p : CleaningPreference) : void
}
PreferenceView ..|> Observer

class CleaningStatusView <<view>> {
  +update(p : float) : void
  +display() : void
}
CleaningStatusView ..|> Observer

class NotificationManager <<view>> {
  +update(p : float) : void
  +display() : void
  +showAlert(type : AlertType) : void
}
NotificationManager ..|> Observer

class BoundaryEditor <<view>> {
  +defineZone(points : List<Point>) : void
  +sendZone(zone : Polygon) : void
  +display() : void
}

class LogViewer <<view>> {
  +update(newEntry : SessionEntry) : void
  +show(all : List<SessionEntry>) : void
}
LogViewer ..|> Observer

class UserInterface <<view>> {
  +showMessage(msg : String) : void
}


/'──────────────────────────────────────────────────────────
  CONTROLLER (Control – Logic)
──────────────────────────────────────────────────────────'/
class CleaningController <<controller>> {
  -session : CleaningSession
  +selectAction(action : CleaningAction) : void
  +updateProgress(percent : float) : void
  +forwardPreference(room : String, p : CleaningPreference) : void
  +notifyCompletion() : void
  +sendLog(msg : String) : void
}

class PreferenceManager <<controller>> {
  -storage : RoomPreferenceStorage
  +savePreference(room : String, p : CleaningPreference) : void
  +loadPreference(room : String) : CleaningPreference
}

class BoundaryValidator <<controller>> {
  -storage : BoundaryStorage
  +isValid(zone : Polygon) : boolean
}

class Logger <<controller>> {
  -log : SessionLog
  +log(event : String) : void
}


/'──────────────────────────────────────────────────────────
  COMPOSITIONS & AGGREGATIONS
──────────────────────────────────────────────────────────'/
SessionLog            "1" *-- "0..*" SessionEntry       : «contains»
BoundaryStorage       "1" *-- "0..*" Polygon            : «contains»
RoomPreferenceStorage "1" o-- "0..*" CleaningPreference : «aggregates»


/'──────────────────────────────────────────────────────────
  MVC RELATIONSHIPS (unchanged)
──────────────────────────────────────────────────────────'/
CleaningController  "1"  --> "*"    MapHandler            : «conveys»
CleaningController  "1"  --> "0..*" NotificationManager   : «uses»
CleaningController  "1"  --> "0..*" CleaningStatusView    : «updates»
CleaningController  "1"  --> "1"    PreferenceManager     : «requests»
CleaningController  "1"  --> "1"    Logger                : «delegates»
CleaningController  "1"  --> "0..1" CleaningSession       : «manages»

PreferenceManager   "1"  --> "1"    RoomPreferenceStorage : «persists»
PreferenceView      "0..*" --> "1"  PreferenceManager     : «sends»

BoundaryEditor      "*"  --> "1"    MapHandler            : «renders»
BoundaryEditor      "1"  --> "*"    BoundaryValidator     : «submits»
BoundaryValidator   "1"  --> "1"    BoundaryStorage       : «stores»
MapHandler          "*"  --> "1"    BoundaryStorage       : «reads»

Logger              "1"  --> "1"    SessionLog            : «writes»
LogViewer           "0..*" --> "1"  SessionLog            : «reads»

CleaningStatusView  "0..*" <-- "1"  CleaningController    : «receives»
NotificationManager "0..*" --> "1"  UserInterface         : «displays»


/'──────────────────────────────────────────────────────────
  OBSERVER LINKS (use-cases, unchanged)
──────────────────────────────────────────────────────────'/
'— 1. Progress updates
CleaningStatusView   ..> CleaningSession    : registerObserver()
NotificationManager  ..> CleaningSession    : registerObserver()
CleaningSession      --> CleaningStatusView : notifyObservers()
CleaningSession      --> NotificationManager: notifyObservers()

'— 2. Preference changes
PreferenceView       ..> RoomPreferenceStorage : registerObserver()
RoomPreferenceStorage --> PreferenceView       : notifyObservers()

'— 3. Boundary zone edits
MapHandler           ..> BoundaryStorage : registerObserver()
BoundaryStorage      --> MapHandler      : notifyObservers()

'— 4. Live log feed
LogViewer            ..> SessionLog : registerObserver()
SessionLog           --> LogViewer  : notifyObservers()

@enduml
