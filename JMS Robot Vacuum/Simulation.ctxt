#BlueJ class context
comment0.target=Simulation
comment0.text=\n\ Simulation\ class\ to\ simulate\ a\ robot's\ sensor\ data\ and\ movement\ \n\ in\ a\ manually\ defined\ grid.\n\n\ @Brian\n\ @31/5\n
comment1.params=
comment1.target=Simulation()
comment1.text=\n\ Private\ constructor\ sets\ up\ the\ simulation\ using\ a\ manually\ defined\ grid.\n\ The\ grid\ is\ defined\ via\ a\ string\ array\ for\ clear\ visual\ layout.\n\n
comment10.params=
comment10.target=void\ restartCleaning()
comment2.params=
comment2.target=Simulation\ getInstance()
comment2.text=\n\ Returns\ the\ singleton\ instance\ of\ the\ Simulation\ class.\n\n\ @return\ the\ single\ Simulation\ instance.\n
comment3.params=r\ c
comment3.target=boolean\ inBounds(int,\ int)
comment4.params=dRow\ dCol
comment4.target=int\ scanDirection(int,\ int)
comment4.text=\n\ Scans\ from\ the\ robot's\ current\ position\ in\ the\ given\ direction\n\ for\ up\ to\ 10\ cells.\ Returns\ the\ distance\ to\ the\ first\ encountered\n\ obstacle.\ If\ no\ obstacle\ is\ found\ or\ if\ the\ ray\ goes\ out\ of\ bounds,\n\ returns\ 0.\n\n\ @param\ dRow\ row\ increment\n\ @param\ dCol\ column\ increment\n\ @return\ the\ distance\ to\ the\ obstacle\ or\ 0\ if\ none\ is\ detected.\n
comment5.params=
comment5.target=int[]\ getSensorData()
comment5.text=\n\ Returns\ sensor\ data\ for\ the\ 4\ cardinal\ directions\ from\ the\ robot's\ cell.\n\ The\ returned\ array\ is\ ordered\ as\ follows\:\n\ \ \ index\ 0\ \=\ North,\ index\ 1\ \=\ East,\ index\ 2\ \=\ South,\ index\ 3\ \=\ West.\n\n\ @return\ an\ int\ array\ containing\ 4\ sensor\ readings.\n
comment6.params=
comment6.target=void\ sendSensorData()
comment6.text=\n\ Sends\ the\ current\ sensor\ data\ to\ the\ PathChecker.\n\ Since\ PathChecker\ expects\ 8\ sensor\ readings,\n\ the\ same\ value\ is\ sent\ twice\ for\ each\ direction\:\n\ \ \ -\ North\ ->\ positions\ 1\ and\ 2\n\ \ \ -\ South\ ->\ positions\ 3\ and\ 4\n\ \ \ -\ West\ \ ->\ positions\ 5\ and\ 6\n\ \ \ -\ East\ \ ->\ positions\ 7\ and\ 8\n
comment7.params=
comment7.target=void\ sendInitialData()
comment7.text=\n\ Sends\ the\ initial\ sensor\ data\ from\ the\ simulation.\n\ This\ method\ can\ be\ called\ to\ give\ more\ sensor\ readings.\n
comment8.params=movement
comment8.target=void\ processMovement(MovementWord)
comment8.text=\n\ Processes\ a\ movement\ command.\ The\ robot\ will\ attempt\ to\ move\ one\ cell\n\ in\ the\ specified\ direction.\ If\ the\ destination\n\ cell\ is\ within\ bounds\ and\ is\ free,\ the\ move\ is\ performed.\n\ After\ moving,\ the\ updated\ sensor\ data\ is\ sent\ out.\n\n\ @param\ movement\ The\ movement\ command,\ provided\ as\ a\ MovementWord\ object.\n
comment9.params=movement
comment9.target=void\ updateRobotPosition(MovementWord)
comment9.text=\n\ Updates\ the\ robot's\ position\ on\ the\ grid\ based\ on\ the\ given\ movement\ direction.\n\ \n\ @param\ movement\ the\ movement\ command\n
numComments=11
