#BlueJ class context
comment0.target=Navigator
comment0.text=\n\ Navigator\ controls\ pathfinding\ by\ interacting\ with\ PathChecker\n\ and\ request\ previous\ maps\ if\ available\ from\ RobotSystem.\n\n\ @author\ Brian\n\ @version\ 30/5\n
comment1.params=
comment1.target=Navigator()
comment1.text=\n\ Private\ constructor\ for\ singleton\ pattern.\n\ Initializes\ internal\ references.\n
comment10.params=
comment10.target=int\ getCurrPercent()
comment2.params=
comment2.target=Navigator\ getInstance()
comment2.text=\n\ Singleton\ accessor\ for\ Navigator.\n
comment3.params=sd
comment3.target=void\ receiveData(SurroundingData)
comment3.text=\n\ Receives\ path\ data\ from\ PathChecker,\ updates\ state,\n\ calculates\ next\ route,\ and\ sends\ next\ movement\ command.\n\ \n\ @param\ sd\ compiled\ data\ about\ nearby\ obstacles\ from\ sensors\n
comment4.params=
comment4.target=MovementWord\ calculateRoute()
comment4.text=\n\ Calculates\ a\ route\ using\ map\ data\ from\ RobotSystem.\n\ Fallbacks\ to\ live\ PathChecker\ data\ if\ no\ usable\ map\ is\ found.\n\ \n\ @return\ the\ next\ movement\ for\ the\ robot\n
comment5.params=vb
comment5.target=void\ navigate(VirtualBoundary)
comment5.text=\n\ Starts\ the\ navigation\ routine.\n\ \n\ @param\ vb\ the\ rectange\ marked\ by\ the\ user\ to\ avoid.\n
comment6.params=
comment6.target=void\ stop()
comment6.text=\n\ Stops\ the\ navigation\ routine.\n
comment7.params=
comment7.target=void\ restart()
comment7.text=\n\ Restarts\ the\ navigation\ routine\ from\ charging\ dock.\n
comment8.params=
comment8.target=void\ setUpdate()
comment8.text=\n\ Sets\ update\ to\ true\n
comment9.params=
comment9.target=void\ update()
comment9.text=\n\ Finishes\ the\ navigation\ routine.\n
numComments=11
