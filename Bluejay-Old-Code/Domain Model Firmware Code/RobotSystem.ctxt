#BlueJ class context
comment0.target=RobotSystem
comment0.text=\r\n\ RobotSystem\ is\ the\ main\ controller\ of\ the\ robot\ firmware\ and\ \r\n\ coordinates\ the\ cleaning\ schedule\ and\ robot\ actions,\ working\ \r\n\ with\ CleanScheduler,\ Navigator,\ and\ MapGenerator.\r\n\r\n\ @author\ Brian\r\n\ @version\ 29/5\r\n
comment1.params=
comment1.target=RobotSystem()
comment1.text=\ \r\n\ Private\ constructor\ for\ singleton.\r\n
comment10.params=
comment10.target=void\ deleteMap()
comment10.text=\r\n\ Deletes\ the\ currently\ stored\ map.\r\n
comment11.params=vb
comment11.target=void\ setNoGoZone(VirtualBoundary)
comment11.text=\r\n\ Sets\ the\ current\ virtual\ boundary.\r\n\ \r\n\ @param\ vb\ the\ newly\ set\ virtual\ boundary\r\n
comment12.params=observer
comment12.target=void\ registerObserver(RobotObserver)
comment12.text=\r\n\ Add\ observer\ for\ the\ pattern\r\n
comment13.params=observer
comment13.target=void\ unregisterObserver(RobotObserver)
comment13.text=\r\n\ Remove\ observer\r\n
comment14.params=
comment14.target=void\ notifyObservers()
comment14.text=\r\n\ Notify\ the\ observers\ in\ the\ pattern\r\n
comment15.params=
comment15.target=void\ noBattery()
comment15.text=\r\n\ Stop\ movement\ due\ to\ no\ battery\r\n
comment16.params=
comment16.target=void\ resumeCleaning()
comment16.text=\r\n\ Stop\ movement\ due\ to\ no\ battery\r\n
comment17.params=output\ percent
comment17.target=void\ updateApp(Map,\ float)
comment17.text=\r\n\ Updates\ app\ on\ current\ map\ and\ percentage\r\n
comment18.params=
comment18.target=void\ giveCurrMap()
comment2.params=
comment2.target=RobotSystem\ getInstance()
comment2.text=\r\n\ Gives\ access\ to\ the\ RobotSystem.\r\n\ \r\n\ @return\ reference\ to\ RobotSystem.\r\n
comment3.params=command
comment3.target=void\ receiveCommand(CommandWord)
comment3.text=\r\n\ Processes\ a\ CommandWord\ object.\r\n\ \r\n\ @param\ command\ the\ command\ from\ the\ console\r\n
comment4.params=
comment4.target=void\ startCleaning()
comment4.text=\ \r\n\ Begins\ the\ cleaning\ process,\ initialising\ other\ classes\r\n\ if\ first\ clean.\r\n
comment5.params=
comment5.target=void\ stopCleaning()
comment5.text=\r\n\ Pauses\ the\ cleaning\ process.\r\n
comment6.params=mw
comment6.target=void\ receiveMovement(MovementWord)
comment6.text=\r\n\ Receives\ the\ next\ move\ for\ the\ robot\ from\ the\ navigator.\r\n\ \r\n\ @param\ mw\ the\ movement\ of\ up,\ down,\ left\ or\ right.\r\n
comment7.params=newMap
comment7.target=void\ finishCleaning(Map)
comment7.text=\r\n\ Receives\ the\ completed\ map\ of\ the\ area\ after\ a\ clean.\r\n\ \r\n\ @param\ newMap\ the\ new\ completed\ map.\r\n
comment8.params=
comment8.target=boolean\ hasMap()
comment8.text=\r\n\ Checks\ if\ a\ previous\ map\ exists.\r\n
comment9.params=
comment9.target=Map\ getPrevMap()
comment9.text=\ \r\n\ Getter\ for\ the\ map\r\n
numComments=19
