#BlueJ class context
comment0.target=RobotSystem
comment0.text=\n\ RobotSystem\ is\ the\ main\ controller\ of\ the\ robot\ firmware\ and\ \n\ coordinates\ the\ cleaning\ schedule\ and\ robot\ actions,\ working\ \n\ with\ CleanScheduler,\ Navigator,\ and\ MapGenerator.\n\n\ @author\ Brian\n\ @version\ 29/5\n
comment1.params=
comment1.target=java.lang.Boolean\ startCleaning()
comment10.params=
comment10.target=boolean\ hasMap()
comment10.text=\n\ Checks\ if\ a\ previous\ map\ exists.\n
comment11.params=
comment11.target=Map\ getPrevMap()
comment11.text=\ \n\ Getter\ for\ the\ map\n
comment12.params=
comment12.target=void\ deleteMap()
comment12.text=\n\ Deletes\ the\ currently\ stored\ map.\n
comment13.params=vb
comment13.target=void\ setNoGoZone(VirtualBoundary)
comment13.text=\n\ Sets\ the\ current\ virtual\ boundary.\n\ \n\ @param\ vb\ the\ newly\ set\ virtual\ boundary\n
comment14.params=observer
comment14.target=void\ registerObserver(RobotObserver)
comment14.text=\n\ Add\ observer\ for\ the\ pattern\n
comment15.params=observer
comment15.target=void\ unregisterObserver(RobotObserver)
comment15.text=\n\ Remove\ observer\n
comment16.params=
comment16.target=void\ notifyObservers()
comment16.text=\n\ Notify\ the\ observers\ in\ the\ pattern\n
comment17.params=
comment17.target=void\ noBattery()
comment17.text=\n\ Stop\ movement\ due\ to\ no\ battery\n
comment18.params=
comment18.target=void\ resumeCleaning()
comment18.text=\n\ Stop\ movement\ due\ to\ no\ battery\n
comment19.params=output\ percent
comment19.target=void\ updateApp(Map,\ int)
comment19.text=\n\ Updates\ app\ on\ current\ map\ and\ percentage\n
comment2.params=
comment2.target=java.lang.Boolean\ stopCleaning()
comment20.params=
comment20.target=void\ giveCurrMap()
comment21.params=progress
comment21.target=void\ setCleaningProgress(int)
comment22.params=cleaning
comment22.target=void\ setCleaning(boolean)
comment23.params=
comment23.target=void\ returnToDock()
comment3.params=
comment3.target=int\ getCleaningProgress()
comment4.params=
comment4.target=RobotStatus\ getStatus()
comment5.params=
comment5.target=RobotSystem()
comment5.text=\ \n\ Private\ constructor\ for\ singleton.\n
comment6.params=
comment6.target=RobotSystem\ getInstance()
comment6.text=\n\ Gives\ access\ to\ the\ RobotSystem.\n\ \n\ @return\ reference\ to\ RobotSystem.\n
comment7.params=command
comment7.target=void\ receiveCommand(CommandWord)
comment7.text=\n\ Processes\ a\ CommandWord\ object.\n\ \n\ @param\ command\ the\ command\ from\ the\ console\n
comment8.params=mw
comment8.target=void\ receiveMovement(MovementWord)
comment8.text=\n\ Receives\ the\ next\ move\ for\ the\ robot\ from\ the\ navigator.\n\ \n\ @param\ mw\ the\ movement\ of\ up,\ down,\ left\ or\ right.\n
comment9.params=newMap
comment9.target=void\ finishCleaning(Map)
comment9.text=\n\ Receives\ the\ completed\ map\ of\ the\ area\ after\ a\ clean.\n\ \n\ @param\ newMap\ the\ new\ completed\ map.\n
numComments=24
